==================
Load
==================

abc;
def_123;

---

(source_file
  exprs: (load)
  exprs: (load))

==================
Identifier 2
==================

abc_123;

---

(source_file
  exprs: (load))

==================
Integer
==================

123;

---

(source_file
  (integer))

==================
Attribute
==================

abc.d;

---

(source_file
  exprs: (attribute
    value: (load)
    name: (identifier)))

==================
Subscript
==================

abc[1];

---

(source_file
  exprs: (subscript
    value: (load)
    index: (integer)))

==================
Call
==================

a();
a(b);
a(b, 2);

---

(source_file
  exprs: (call
    value: (load))
  exprs: (call
    value: (load)
    arguments: (load))
  exprs: (call
    value: (load)
    arguments: (load)
    arguments: (integer)))

==================
List
==================

[];
[a];
[a, 2];

---

(source_file
  exprs: (list)
  exprs: (list
    elements: (load))
  exprs: (list
    elements: (load)
    elements: (integer)))

==================
Binary op and paren
==================

a * 1;
a + 1;
a * 2 + c;
a + 2 * c;
(a + 2) * c;

---

(source_file
  exprs: (bin_op
    left: (load)
    operator: (op_mul)
    right: (integer))
  exprs: (bin_op
    left: (load)
    operator: (op_plus)
    right: (integer))
  exprs: (bin_op
    left: (bin_op
      left: (load)
      operator: (op_mul)
      right: (integer))
    operator: (op_plus)
    right: (load))
  exprs: (bin_op
    left: (load)
    operator: (op_plus)
    right: (bin_op
      left: (integer)
      operator: (op_mul)
      right: (load)))
  exprs: (bin_op
    left: (paren_expr
      value: (bin_op
        left: (load)
        operator: (op_plus)
        right: (integer)))
    operator: (op_mul)
    right: (load)))

======
Brace
======

{a[2]};

---

(source_file
  exprs: (paren_expr
    value: (subscript
      value: (load)
      index: (integer))))

==============
Simple compare
==============

1 not in 2;
1 not    in 2;
1 is not 2;

---

(source_file
  exprs: (simple_compare
    (integer)
    (integer))
  exprs: (simple_compare
    (integer)
    (integer))
  exprs: (simple_compare
    (integer)
    (integer)))

